{"ast":null,"code":"var _jsxFileName = \"/home/jeel/Documents/reactjs/hooks-practical/src/useCallback.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Todos from \"./Todos\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UseCallBack = () => {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [todo, setTodo] = useState([]);\n\n  const increment = () => {\n    setCount(i => i + 1);\n  };\n\n  const addTodo = () => {// setTodo((value) => [ ...value, \"New Todo\"]);\n  };\n\n  console.log('test', todo);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Todos, {\n      todo: todo,\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"count: \", count, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: increment,\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n\n_s(UseCallBack, \"L9mke5BGCjHBQPPEHYHAgswivyg=\");\n\n_c = UseCallBack;\nexport default UseCallBack;\n\nvar _c;\n\n$RefreshReg$(_c, \"UseCallBack\");","map":{"version":3,"names":["React","useState","Todos","UseCallBack","count","setCount","todo","setTodo","increment","i","addTodo","console","log"],"sources":["/home/jeel/Documents/reactjs/hooks-practical/src/useCallback.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Todos from \"./Todos\";\n\nconst UseCallBack = () => {\n    const [count, setCount] = useState(0);\n    const [todo, setTodo] = useState([]);\n\n    const increment = () => {\n        setCount((i) => i + 1);\n    };\n\n    const addTodo = () => {\n        // setTodo((value) => [ ...value, \"New Todo\"]);\n    };\n\n\n    console.log('test', todo)\n    return (\n        <React.Fragment>\n            <Todos todo={todo} addTodo={addTodo} />\n            <hr />\n            <div>\n                count: {count}\n                <button onClick={increment}>+</button>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport default UseCallBack;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;EAAA;;EACtB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAAD,CAAlC;EACA,MAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;;EAEA,MAAMO,SAAS,GAAG,MAAM;IACpBH,QAAQ,CAAEI,CAAD,IAAOA,CAAC,GAAG,CAAZ,CAAR;EACH,CAFD;;EAIA,MAAMC,OAAO,GAAG,MAAM,CAClB;EACH,CAFD;;EAKAC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBN,IAApB;EACA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI,QAAC,KAAD;MAAO,IAAI,EAAEA,IAAb;MAAmB,OAAO,EAAEI;IAA5B;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI;MAAA;MAAA;MAAA;IAAA,QAFJ,eAGI;MAAA,sBACYN,KADZ,eAEI;QAAQ,OAAO,EAAEI,SAAjB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QAHJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAUH,CAxBD;;GAAML,W;;KAAAA,W;AA0BN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}