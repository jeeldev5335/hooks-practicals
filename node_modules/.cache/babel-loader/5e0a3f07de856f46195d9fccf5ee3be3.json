{"ast":null,"code":"var _jsxFileName = \"/home/jeel/Documents/reactjs/hooks-practical/src/useRef3.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Value = () => {\n  _s();\n\n  const [data, setData] = useState(\"\");\n  const [previosvalue] = useRef(\"\");\n  useEffect(() => {\n    previosvalue.current = data;\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: data,\n      onChange: a => setData(a.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"current Value is: \", data]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Previous Value is: \", previosData.current]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Value, \"INtCm6cCeSavn06a4DC5yV7znKs=\");\n\n_c = Value;\nexport default Value;\n\nvar _c;\n\n$RefreshReg$(_c, \"Value\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Value","data","setData","previosvalue","current","a","target","value","previosData"],"sources":["/home/jeel/Documents/reactjs/hooks-practical/src/useRef3.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\n\nconst Value = () => {\n    const [data, setData] = useState(\"\");\n    const [previosvalue] = useRef(\"\");\n\n    useEffect(() => {\n        previosvalue.current = data;\n    }, [data]);\n\n    return(\n        <React.Fragment>\n            <input \n                type=\"text\"\n                value={data}\n                onChange={(a) => setData(a.target.value)}\n            />\n            <h1>current Value is: {data}</h1>\n            <h1>Previous Value is: {previosData.current}</h1>\n        </React.Fragment>\n    );\n}\n\nexport default Value;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;;;AAGA,MAAMC,KAAK,GAAG,MAAM;EAAA;;EAChB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACI,YAAD,IAAiBL,MAAM,CAAC,EAAD,CAA7B;EAEAD,SAAS,CAAC,MAAM;IACZM,YAAY,CAACC,OAAb,GAAuBH,IAAvB;EACH,CAFQ,EAEN,CAACA,IAAD,CAFM,CAAT;EAIA,oBACI,QAAC,KAAD,CAAO,QAAP;IAAA,wBACI;MACI,IAAI,EAAC,MADT;MAEI,KAAK,EAAEA,IAFX;MAGI,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV;IAH5B;MAAA;MAAA;MAAA;IAAA,QADJ,eAMI;MAAA,iCAAuBN,IAAvB;IAAA;MAAA;MAAA;MAAA;IAAA,QANJ,eAOI;MAAA,kCAAwBO,WAAW,CAACJ,OAApC;IAAA;MAAA;MAAA;MAAA;IAAA,QAPJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAWH,CAnBD;;GAAMJ,K;;KAAAA,K;AAqBN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}